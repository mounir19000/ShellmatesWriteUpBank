{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/mounir/Desktop/ShellmatesWriteUpBank/src/components/slider.tsx"],"sourcesContent":["// components/DualSlider.tsx\n\"use client\";\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/autoplay\";\nimport { Autoplay } from \"swiper/modules\";\nimport { FreeMode } from \"swiper/modules\";\nimport Image from \"next/image\";\nimport { useEffect, useState } from \"react\";\n\nconst images = Array.from(\n  { length: 13 },\n  (_, i) => `/pics/sliderImages/image ${i + 1}.png`\n);\n\nconst Slider = () => {\n  const [isDesktop, setIsDesktop] = useState(false);\n\n  useEffect(() => {\n    const updateView = () => setIsDesktop(window.innerWidth >= 1024);\n    updateView();\n    window.addEventListener(\"resize\", updateView);\n    return () => window.removeEventListener(\"resize\", updateView);\n  }, []);\n\n  return (\n    <div\n      className={`flex ${\n        isDesktop ? \"flex-row h-[80vh]\" : \"flex-col h-[60vh]\"\n      } w-full gap-8`}\n    >\n      <ImageSlider images={images} isVertical={isDesktop} reverse={false} />\n      <ImageSlider images={images} isVertical={isDesktop} reverse={true} />\n    </div>\n  );\n};\n\ntype ImageSliderProps = {\n  images: string[];\n  isVertical: boolean;\n  reverse: boolean;\n};\n\nconst initialTheme = localStorage.getItem(\"theme\") || \"light\";\n\nconst ImageSlider = ({ images, isVertical, reverse }: ImageSliderProps) => {\n  console.log(initialTheme);\n\n  return (\n    <Swiper\n      direction={isVertical ? \"vertical\" : \"horizontal\"}\n      loop={true}\n      freeMode={true}\n      autoplay={{\n        delay: 0,\n        disableOnInteraction: false,\n        reverseDirection: reverse,\n      }}\n      allowTouchMove={false}\n      modules={[Autoplay, FreeMode]}\n      speed={10000}\n      slidesPerView=\"auto\"\n      spaceBetween={10}\n      className=\"w-full h-full\"\n    >\n      {images.map((src, index) => (\n        <SwiperSlide key={index} className=\"w-auto h-auto\">\n          <div className=\"relative w-auto h-auto\">\n            <Image\n              src={src}\n              alt={`img-${index}`}\n              width={260}\n              height={321}\n              className=\"w-full min-w-3xs min-h-full lg:min-h-none\"\n            />\n          </div>\n        </SwiperSlide>\n      ))}\n    </Swiper>\n  );\n};\n\nexport default Slider;\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;AAG5B;AAGA;AAAA;AACA;AACA;AACA;;;AARA;;;;;;;;AAUA,MAAM,SAAS,MAAM,IAAI,CACvB;IAAE,QAAQ;AAAG,GACb,CAAC,GAAG,IAAM,CAAC,yBAAyB,EAAE,IAAI,EAAE,IAAI,CAAC;AAGnD,MAAM,SAAS;;IACb,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4BAAE;YACR,MAAM;+CAAa,IAAM,aAAa,OAAO,UAAU,IAAI;;YAC3D;YACA,OAAO,gBAAgB,CAAC,UAAU;YAClC;oCAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;;QACpD;2BAAG,EAAE;IAEL,qBACE,6LAAC;QACC,WAAW,CAAC,KAAK,EACf,YAAY,sBAAsB,oBACnC,aAAa,CAAC;;0BAEf,6LAAC;gBAAY,QAAQ;gBAAQ,YAAY;gBAAW,SAAS;;;;;;0BAC7D,6LAAC;gBAAY,QAAQ;gBAAQ,YAAY;gBAAW,SAAS;;;;;;;;;;;;AAGnE;GApBM;KAAA;AA4BN,MAAM,eAAe,aAAa,OAAO,CAAC,YAAY;AAEtD,MAAM,cAAc,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAoB;IACpE,QAAQ,GAAG,CAAC;IAEZ,qBACE,6LAAC,6IAAA,CAAA,SAAM;QACL,WAAW,aAAa,aAAa;QACrC,MAAM;QACN,UAAU;QACV,UAAU;YACR,OAAO;YACP,sBAAsB;YACtB,kBAAkB;QACpB;QACA,gBAAgB;QAChB,SAAS;YAAC,wLAAA,CAAA,WAAQ;YAAE,4LAAA,CAAA,WAAQ;SAAC;QAC7B,OAAO;QACP,eAAc;QACd,cAAc;QACd,WAAU;kBAET,OAAO,GAAG,CAAC,CAAC,KAAK,sBAChB,6LAAC,6IAAA,CAAA,cAAW;gBAAa,WAAU;0BACjC,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;wBACJ,KAAK;wBACL,KAAK,CAAC,IAAI,EAAE,OAAO;wBACnB,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;;;;;;eAPE;;;;;;;;;;AAc1B;MAnCM;uCAqCS","debugId":null}}]
}